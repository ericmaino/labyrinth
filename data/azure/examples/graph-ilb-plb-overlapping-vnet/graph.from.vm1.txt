Options summary:
  Not modeling source ip address spoofing (use -s flag to enable).
  Displaying endpoints and routing nodes. (-r)
  Displaying paths (-p or -v).
  Verbose mode (-v).
Backprojecting paths past NAT rewrites. (-b)

Nodes:
  AzureBackbone/inbound: 
  AzureBackbone/outbound: 
  Internet:  (endpoint)
  loadBalancer1: 
  loadBalancer2: 
  nic1/inbound: 
  nic1/outbound: 
  nic2/inbound: 
  nic2/outbound: 
  subnet1/inbound: 
  subnet2/inbound: 
  vm1:  (endpoint)
  vm2:  (endpoint)
  vnet1/inbound: 
  vnet1/router: vnet2
  vnet2/inbound: 
  vnet2/router: vnet2

Nodes reachable from vm1:

AzureBackbone/inbound:
  routes:
    (no routes)

  paths:
    (no paths)

AzureBackbone/outbound:
  routes:
    source ip: 192.168.10.4
    destination ip: except 52.151.49.75, vnet2

  paths:
    vm1 => nic1/outbound => vnet1/router => AzureBackbone/outbound
      source ip: 192.168.10.4
      destination ip: except 52.151.49.75, vnet2

Internet:
  routes:
    source ip: 192.168.10.4
    destination ip: except 52.151.49.75, vnet2

  paths:
    vm1 => nic1/outbound => vnet1/router => AzureBackbone/outbound => Internet
      source ip: 192.168.10.4
      destination ip: except 52.151.49.75, vnet2

loadBalancer1:
  routes:
    source ip: 192.168.10.4
    destination ip: 52.151.49.75

  paths:
    vm1 => nic1/outbound => vnet1/router => loadBalancer1
      source ip: 192.168.10.4
      destination ip: 52.151.49.75

loadBalancer2:
  routes:
    (no routes)

  paths:
    (no paths)

nic1/inbound:
  routes:
    source ip: 192.168.10.4
    destination ip: 192.168.10.4
    destination port: http
    protocol: TCP

    source ip: 192.168.10.4
    destination ip: 192.168.10.4

  paths:
    vm1 => nic1/outbound => vnet1/router => loadBalancer1 => vnet1/inbound => subnet1/inbound => nic1/inbound
      source ip: 192.168.10.4
      destination ip: 52.151.49.75
      destination port: http
      protocol: TCP
    vm1 => nic1/outbound => vnet1/router => vnet1/inbound => subnet1/inbound => nic1/inbound
      source ip: 192.168.10.4
      destination ip: 192.168.10.4

nic1/outbound:
  routes:
    source ip: 192.168.10.4

  paths:
    vm1 => nic1/outbound
      source ip: 192.168.10.4

nic2/inbound:
  routes:
    (no routes)

  paths:
    (no paths)

nic2/outbound:
  routes:
    (no routes)

  paths:
    (no paths)

subnet1/inbound:
  routes:
    source ip: 192.168.10.4
    destination ip: 192.168.10.4
    destination port: http
    protocol: TCP

    source ip: 192.168.10.4
    destination ip: 192.168.10.0/28

  paths:
    vm1 => nic1/outbound => vnet1/router => loadBalancer1 => vnet1/inbound => subnet1/inbound
      source ip: 192.168.10.4
      destination ip: 52.151.49.75
      destination port: http
      protocol: TCP
    vm1 => nic1/outbound => vnet1/router => vnet1/inbound => subnet1/inbound
      source ip: 192.168.10.4
      destination ip: 192.168.10.0/28

subnet2/inbound:
  routes:
    (no routes)

  paths:
    (no paths)

vm2:
  routes:
    (no routes)

  paths:
    (no paths)

vnet1/inbound:
  routes:
    source ip: 192.168.10.4
    destination ip: 192.168.10.4
    destination port: http
    protocol: TCP

    source ip: 192.168.10.4
    destination ip: vnet2

  paths:
    vm1 => nic1/outbound => vnet1/router => loadBalancer1 => vnet1/inbound
      source ip: 192.168.10.4
      destination ip: 52.151.49.75
      destination port: http
      protocol: TCP
    vm1 => nic1/outbound => vnet1/router => vnet1/inbound
      source ip: 192.168.10.4
      destination ip: vnet2

vnet1/router:
  routes:
    source ip: 192.168.10.4

  paths:
    vm1 => nic1/outbound => vnet1/router
      source ip: 192.168.10.4

vnet2/inbound:
  routes:
    (no routes)

  paths:
    (no paths)

vnet2/router:
  routes:
    (no routes)

  paths:
    (no paths)

